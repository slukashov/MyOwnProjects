akka {
	actor {
	provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
	deployment {
		/api/broadcaster {
			router = broadcast-group
			routees.paths = ["/user/api"]
				cluster {
					enabled = on
					max-nr-of-instances-per-node = 1
					allow-local-routees = on
					use-role = tracker
					}
				}
		/downloads/broadcaster {
			router = broadcast-group
			routees.paths = ["/user/downloads"]
				cluster {
					enabled = on
					max-nr-of-instances-per-node = 1
					allow-local-routees = on
					use-role = tracker
					}
				}
		"/api/*/coordinators" {
			router = round-robin-pool
			nr-of-instances = 10
				cluster {
					enabled = on
					max-nr-of-instances-per-node = 2
					allow-local-routees = off
					use-role = crawler
					}
				}
			}
		}
	remote {
	log-remote-lifecycle-events = DEBUG
	log-received-messages = on
		helios.tcp {
			transport-class = "Akka.Remote.Transport.Helios.HeliosTcpTransport, Akka.Remote"
			applied-adapters = []
			transport-protocol = tcp
			#public-hostname = "POPULATE STATIC IP HERE"
			hostname = "localhost"
			port = 0
			}
		}
		cluster {
			seed-nodes = ["akka.tcp://webcrawler@localhost:4053"]
			roles = ["tracker"]
			}
		}